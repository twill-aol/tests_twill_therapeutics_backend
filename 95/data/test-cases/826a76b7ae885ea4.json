{"uid":"826a76b7ae885ea4","name":"test_ha_complete","fullName":"tests.profile.test_happiness_assessment.TestHA#test_ha_complete","historyId":"7d2b65f6010f1fc5d68fb73a77b03bd1","time":{"start":1668218779643,"stop":1668218779815,"duration":172},"description":"This test checks complete HA","descriptionHtml":"<p>This test checks complete HA</p>\n","status":"broken","statusMessage":"TypeError: 'NoneType' object is not subscriptable","statusTrace":"self = <test_happiness_assessment.TestHA object at 0x7f2ee240c350>\n\n    @allure.label(\"ha\", \"assessment\", \"profile\", \"smoke\", \"authorization\")\n    @allure.description(\"This test checks complete HA\")\n    def test_ha_complete(self):\n        '''Complete HA'''\n>       response = TestHA.test_ha_result(self)\n\ntests/profile/test_happiness_assessment.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_happiness_assessment.TestHA object at 0x7f2ee240c350>\n\n    @allure.label(\"ha\", \"assessment\", \"profile\", \"smoke\", \"authorization\")\n    @allure.description(\"This test checks get HA status\")\n    def test_ha_result(self):\n        '''Get HA status'''\n        response = MyRequests.get(\n            \"/api/happiness_assessment/result/\",\n            cookies=self.cookies\n        )\n        Assertions.assert_code_status(response, 200)\n        Assertions.assert_json_has_keys(\n            response,\n            [\n                \"result\",\n                \"dialog\"\n            ]\n        )\n        TestHA.ha_id = \\\n>           BaseCase.response_to_json(response)[\"dialog\"][\"dialog_id\"]\nE       TypeError: 'NoneType' object is not subscriptable\n\ntests/profile/test_happiness_assessment.py:32: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test checks complete HA","status":"broken","statusMessage":"TypeError: 'NoneType' object is not subscriptable","statusTrace":"self = <test_happiness_assessment.TestHA object at 0x7f2ee240c350>\n\n    @allure.label(\"ha\", \"assessment\", \"profile\", \"smoke\", \"authorization\")\n    @allure.description(\"This test checks complete HA\")\n    def test_ha_complete(self):\n        '''Complete HA'''\n>       response = TestHA.test_ha_result(self)\n\ntests/profile/test_happiness_assessment.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_happiness_assessment.TestHA object at 0x7f2ee240c350>\n\n    @allure.label(\"ha\", \"assessment\", \"profile\", \"smoke\", \"authorization\")\n    @allure.description(\"This test checks get HA status\")\n    def test_ha_result(self):\n        '''Get HA status'''\n        response = MyRequests.get(\n            \"/api/happiness_assessment/result/\",\n            cookies=self.cookies\n        )\n        Assertions.assert_code_status(response, 200)\n        Assertions.assert_json_has_keys(\n            response,\n            [\n                \"result\",\n                \"dialog\"\n            ]\n        )\n        TestHA.ha_id = \\\n>           BaseCase.response_to_json(response)[\"dialog\"][\"dialog_id\"]\nE       TypeError: 'NoneType' object is not subscriptable\n\ntests/profile/test_happiness_assessment.py:32: TypeError","steps":[{"name":"GET request to URL '/api/happiness_assessment/result/'","time":{"start":1668218779643,"stop":1668218779815,"duration":172},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"ha","value":"assessment"},{"name":"ha","value":"smoke"},{"name":"ha","value":"authorization"},{"name":"epic","value":"[Assessment] HA"},{"name":"ha","value":"profile"},{"name":"parentSuite","value":"tests.profile"},{"name":"suite","value":"test_happiness_assessment"},{"name":"subSuite","value":"TestHA"},{"name":"host","value":"fv-az550-422"},{"name":"thread","value":"2246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.profile.test_happiness_assessment"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":47,"unknown":0,"total":50},"items":[{"uid":"db06351150295d2c","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/94//#testresult/db06351150295d2c","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668201786701,"stop":1668201786854,"duration":153}},{"uid":"f4c024fc91eb0598","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/93//#testresult/f4c024fc91eb0598","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668191546105,"stop":1668191546243,"duration":138}},{"uid":"e8c91e7c557d97f","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/92//#testresult/e8c91e7c557d97f","status":"passed","time":{"start":1668180467715,"stop":1668180476059,"duration":8344}},{"uid":"539cc060e77e2713","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/91//#testresult/539cc060e77e2713","status":"passed","time":{"start":1668171269100,"stop":1668171275095,"duration":5995}},{"uid":"8a064c64d82763e6","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/90//#testresult/8a064c64d82763e6","status":"passed","time":{"start":1668158706469,"stop":1668158711056,"duration":4587}},{"uid":"77858c2b677a99ed","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/89//#testresult/77858c2b677a99ed","status":"passed","time":{"start":1668148517026,"stop":1668148521764,"duration":4738}},{"uid":"7be48b20f11bff7b","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/88//#testresult/7be48b20f11bff7b","status":"passed","time":{"start":1668139110153,"stop":1668139115992,"duration":5839}},{"uid":"cf3b51a25142a993","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/87//#testresult/cf3b51a25142a993","status":"passed","time":{"start":1668132681831,"stop":1668132687162,"duration":5331}},{"uid":"3233ee7f7be19fa8","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/86//#testresult/3233ee7f7be19fa8","status":"passed","time":{"start":1668115448901,"stop":1668115457134,"duration":8233}},{"uid":"bec7ce34e11031d6","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/85//#testresult/bec7ce34e11031d6","status":"passed","time":{"start":1668105061636,"stop":1668105068819,"duration":7183}},{"uid":"f7d964b74d72f7f5","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/84//#testresult/f7d964b74d72f7f5","status":"passed","time":{"start":1668093974914,"stop":1668093980036,"duration":5122}},{"uid":"52f17fb5b3fe80b8","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/83//#testresult/52f17fb5b3fe80b8","status":"passed","time":{"start":1668085001642,"stop":1668085009236,"duration":7594}},{"uid":"69277293bba37483","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/82//#testresult/69277293bba37483","status":"passed","time":{"start":1668072374039,"stop":1668072380035,"duration":5996}},{"uid":"7c998f7d91831f40","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/81//#testresult/7c998f7d91831f40","status":"passed","time":{"start":1668061880692,"stop":1668061885489,"duration":4797}},{"uid":"bf103bb792a83d25","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/80//#testresult/bf103bb792a83d25","status":"passed","time":{"start":1668052743052,"stop":1668052750500,"duration":7448}},{"uid":"43add3d1bdc6aada","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/79//#testresult/43add3d1bdc6aada","status":"passed","time":{"start":1668046362373,"stop":1668046369951,"duration":7578}},{"uid":"a0dad540f896db2c","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/78//#testresult/a0dad540f896db2c","status":"passed","time":{"start":1668029129637,"stop":1668029134669,"duration":5032}},{"uid":"afdff483611aa5bb","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/77//#testresult/afdff483611aa5bb","status":"passed","time":{"start":1668018657234,"stop":1668018662678,"duration":5444}},{"uid":"152ebf03830c1724","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/76//#testresult/152ebf03830c1724","status":"passed","time":{"start":1668007697546,"stop":1668007702853,"duration":5307}},{"uid":"5b62f984cc6564f3","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/75//#testresult/5b62f984cc6564f3","status":"passed","time":{"start":1667998545873,"stop":1667998550695,"duration":4822}}]},"tags":[]},"source":"826a76b7ae885ea4.json","parameterValues":[]}