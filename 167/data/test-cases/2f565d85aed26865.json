{"uid":"2f565d85aed26865","name":"test_ha_dismiss_status_after_complete","fullName":"tests.profile.test_happiness_assessment.TestHA#test_ha_dismiss_status_after_complete","historyId":"fb0208a5316faebc792045f9cf1797f7","time":{"start":1664975727751,"stop":1664975727975,"duration":224},"description":"This test checks dismiss HA after complete it","descriptionHtml":"<p>This test checks dismiss HA after complete it</p>\n","status":"failed","statusMessage":"AssertionError: Unexpected status code! Expected: 200.             Actual: 404","statusTrace":"self = <test_happiness_assessment.TestHA object at 0x7f7c7965dc60>\n\n    @allure.label(\"ha\", \"assessment\", \"profile\", \"smoke\", \"authorization\")\n    @allure.description(\"This test checks dismiss HA after complete it\")\n    def test_ha_dismiss_status_after_complete(self):\n        '''Dismiss HA'''\n        response = MyRequests.get(\n            f\"/api/studies/dismiss-assessment/{self.ha_id}\",\n            cookies=self.cookies\n        )\n>       Assertions.assert_code_status(response, 200)\n\ntests/profile/test_happiness_assessment.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_status_code):\n    \n>       assert (\n            response.status_code == expected_status_code\n        ), f\"Unexpected status code! Expected: {expected_status_code}. \\\n            Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 200.             Actual: 404\n\nlib/assertions.py:44: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test checks dismiss HA after complete it","status":"failed","statusMessage":"AssertionError: Unexpected status code! Expected: 200.             Actual: 404","statusTrace":"self = <test_happiness_assessment.TestHA object at 0x7f7c7965dc60>\n\n    @allure.label(\"ha\", \"assessment\", \"profile\", \"smoke\", \"authorization\")\n    @allure.description(\"This test checks dismiss HA after complete it\")\n    def test_ha_dismiss_status_after_complete(self):\n        '''Dismiss HA'''\n        response = MyRequests.get(\n            f\"/api/studies/dismiss-assessment/{self.ha_id}\",\n            cookies=self.cookies\n        )\n>       Assertions.assert_code_status(response, 200)\n\ntests/profile/test_happiness_assessment.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_status_code):\n    \n>       assert (\n            response.status_code == expected_status_code\n        ), f\"Unexpected status code! Expected: {expected_status_code}. \\\n            Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 200.             Actual: 404\n\nlib/assertions.py:44: AssertionError","steps":[{"name":"GET request to URL '/api/studies/dismiss-assessment/'","time":{"start":1664975727751,"stop":1664975727974,"duration":223},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"ha","value":"assessment"},{"name":"ha","value":"authorization"},{"name":"epic","value":"[Assessment] HA"},{"name":"ha","value":"smoke"},{"name":"ha","value":"profile"},{"name":"parentSuite","value":"tests.profile"},{"name":"suite","value":"test_happiness_assessment"},{"name":"subSuite","value":"TestHA"},{"name":"host","value":"fv-az245-239"},{"name":"thread","value":"2497-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.profile.test_happiness_assessment"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2f565d85aed26865.json","parameterValues":[]}