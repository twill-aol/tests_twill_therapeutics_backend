{"uid":"53d2af4f33131e0b","name":"test_ha_complete","fullName":"tests.profile.test_happiness_assessment.TestHA#test_ha_complete","historyId":"7d2b65f6010f1fc5d68fb73a77b03bd1","time":{"start":1668331441130,"stop":1668331441446,"duration":316},"description":"This test checks complete HA","descriptionHtml":"<p>This test checks complete HA</p>\n","status":"broken","statusMessage":"TypeError: 'NoneType' object is not subscriptable","statusTrace":"self = <test_happiness_assessment.TestHA object at 0x7f20fe5bf990>\n\n    @allure.label(\"ha\", \"assessment\", \"profile\", \"smoke\", \"authorization\")\n    @allure.description(\"This test checks complete HA\")\n    def test_ha_complete(self):\n        '''Complete HA'''\n>       response = TestHA.test_ha_result(self)\n\ntests/profile/test_happiness_assessment.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_happiness_assessment.TestHA object at 0x7f20fe5bf990>\n\n    @allure.label(\"ha\", \"assessment\", \"profile\", \"smoke\", \"authorization\")\n    @allure.description(\"This test checks get HA status\")\n    def test_ha_result(self):\n        '''Get HA status'''\n        response = MyRequests.get(\n            \"/api/happiness_assessment/result/\",\n            cookies=self.cookies\n        )\n        Assertions.assert_code_status(response, 200)\n        Assertions.assert_json_has_keys(\n            response,\n            [\n                \"result\",\n                \"dialog\"\n            ]\n        )\n        TestHA.ha_id = \\\n>           BaseCase.response_to_json(response)[\"dialog\"][\"dialog_id\"]\nE       TypeError: 'NoneType' object is not subscriptable\n\ntests/profile/test_happiness_assessment.py:32: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test checks complete HA","status":"broken","statusMessage":"TypeError: 'NoneType' object is not subscriptable","statusTrace":"self = <test_happiness_assessment.TestHA object at 0x7f20fe5bf990>\n\n    @allure.label(\"ha\", \"assessment\", \"profile\", \"smoke\", \"authorization\")\n    @allure.description(\"This test checks complete HA\")\n    def test_ha_complete(self):\n        '''Complete HA'''\n>       response = TestHA.test_ha_result(self)\n\ntests/profile/test_happiness_assessment.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_happiness_assessment.TestHA object at 0x7f20fe5bf990>\n\n    @allure.label(\"ha\", \"assessment\", \"profile\", \"smoke\", \"authorization\")\n    @allure.description(\"This test checks get HA status\")\n    def test_ha_result(self):\n        '''Get HA status'''\n        response = MyRequests.get(\n            \"/api/happiness_assessment/result/\",\n            cookies=self.cookies\n        )\n        Assertions.assert_code_status(response, 200)\n        Assertions.assert_json_has_keys(\n            response,\n            [\n                \"result\",\n                \"dialog\"\n            ]\n        )\n        TestHA.ha_id = \\\n>           BaseCase.response_to_json(response)[\"dialog\"][\"dialog_id\"]\nE       TypeError: 'NoneType' object is not subscriptable\n\ntests/profile/test_happiness_assessment.py:32: TypeError","steps":[{"name":"GET request to URL '/api/happiness_assessment/result/'","time":{"start":1668331441130,"stop":1668331441445,"duration":315},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"ha","value":"assessment"},{"name":"ha","value":"profile"},{"name":"ha","value":"smoke"},{"name":"epic","value":"[Assessment] HA"},{"name":"ha","value":"authorization"},{"name":"parentSuite","value":"tests.profile"},{"name":"suite","value":"test_happiness_assessment"},{"name":"subSuite","value":"TestHA"},{"name":"host","value":"fv-az445-70"},{"name":"thread","value":"2286-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.profile.test_happiness_assessment"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":47,"unknown":0,"total":61},"items":[{"uid":"71fdcd8b3d1d0c2","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/105//#testresult/71fdcd8b3d1d0c2","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668320998374,"stop":1668320998480,"duration":106}},{"uid":"59a5701aebbee297","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/104//#testresult/59a5701aebbee297","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668311931135,"stop":1668311931351,"duration":216}},{"uid":"687b1f8937387e9b","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/103//#testresult/687b1f8937387e9b","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668305203332,"stop":1668305203538,"duration":206}},{"uid":"1247c52d2add5673","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/102//#testresult/1247c52d2add5673","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668288084796,"stop":1668288084943,"duration":147}},{"uid":"28bc02229af1f186","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/101//#testresult/28bc02229af1f186","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668277758679,"stop":1668277758827,"duration":148}},{"uid":"d5f060f90c86b2b0","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/100//#testresult/d5f060f90c86b2b0","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668266752562,"stop":1668266752724,"duration":162}},{"uid":"fece62af4e8e336e","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/99//#testresult/fece62af4e8e336e","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668256994920,"stop":1668256995241,"duration":321}},{"uid":"1caa54456af2558d","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/98//#testresult/1caa54456af2558d","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668245056344,"stop":1668245056461,"duration":117}},{"uid":"6316f1cfae63d002","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/97//#testresult/6316f1cfae63d002","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668234620078,"stop":1668234620372,"duration":294}},{"uid":"d2569c2f19b72ef","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/96//#testresult/d2569c2f19b72ef","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668225369708,"stop":1668225369953,"duration":245}},{"uid":"826a76b7ae885ea4","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/95//#testresult/826a76b7ae885ea4","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668218779643,"stop":1668218779815,"duration":172}},{"uid":"db06351150295d2c","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/94//#testresult/db06351150295d2c","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668201786701,"stop":1668201786854,"duration":153}},{"uid":"f4c024fc91eb0598","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/93//#testresult/f4c024fc91eb0598","status":"broken","statusDetails":"TypeError: 'NoneType' object is not subscriptable","time":{"start":1668191546105,"stop":1668191546243,"duration":138}},{"uid":"e8c91e7c557d97f","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/92//#testresult/e8c91e7c557d97f","status":"passed","time":{"start":1668180467715,"stop":1668180476059,"duration":8344}},{"uid":"539cc060e77e2713","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/91//#testresult/539cc060e77e2713","status":"passed","time":{"start":1668171269100,"stop":1668171275095,"duration":5995}},{"uid":"8a064c64d82763e6","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/90//#testresult/8a064c64d82763e6","status":"passed","time":{"start":1668158706469,"stop":1668158711056,"duration":4587}},{"uid":"77858c2b677a99ed","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/89//#testresult/77858c2b677a99ed","status":"passed","time":{"start":1668148517026,"stop":1668148521764,"duration":4738}},{"uid":"7be48b20f11bff7b","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/88//#testresult/7be48b20f11bff7b","status":"passed","time":{"start":1668139110153,"stop":1668139115992,"duration":5839}},{"uid":"cf3b51a25142a993","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/87//#testresult/cf3b51a25142a993","status":"passed","time":{"start":1668132681831,"stop":1668132687162,"duration":5331}},{"uid":"3233ee7f7be19fa8","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/86//#testresult/3233ee7f7be19fa8","status":"passed","time":{"start":1668115448901,"stop":1668115457134,"duration":8233}}]},"tags":[]},"source":"53d2af4f33131e0b.json","parameterValues":[]}