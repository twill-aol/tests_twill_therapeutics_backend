{"uid":"5f6bbd8b10d332e4","name":"test_send_comment_to_post","fullName":"tests.community.test_community.TestCommunity#test_send_comment_to_post","historyId":"cc58d47c32e8d6f5266ce2f61a180ef3","time":{"start":1669356535905,"stop":1669356536051,"duration":146},"description":"This test checks     /api/activity_statuses/{`post_id`}/comments/","descriptionHtml":"<p>This test checks     /api/activity_statuses/{<code>post_id</code>}/comments/</p>\n","status":"failed","statusMessage":"AssertionError: Unexpected status code! Expected: 200.             Actual: 404","statusTrace":"self = <test_community.TestCommunity object at 0x7f8bb6251650>\n\n    @allure.label(\"community\", \"post\", \"comment\", \"authorization\")\n    @allure.description(\"This test checks \\\n    /api/activity_statuses/{`post_id`}/comments/\")\n    def test_send_comment_to_post(self):\n        '''Send comment to post in Community'''\n        text = MainCase.good_phrases()\n        data = {\n            \"text\": text\n        }\n        response = MyRequests.post(\n            f\"/api/activity_statuses/{self.post_id}/comments\",\n            json=data,\n            cookies=self.cookies\n        )\n    \n>       Assertions.assert_code_status(response, 200)\n\ntests/community/test_community.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_status_code):\n    \n>       assert (\n            response.status_code == expected_status_code\n        ), f\"Unexpected status code! Expected: {expected_status_code}. \\\n            Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 200.             Actual: 404\n\nlib/assertions.py:44: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test checks     /api/activity_statuses/{`post_id`}/comments/","status":"failed","statusMessage":"AssertionError: Unexpected status code! Expected: 200.             Actual: 404","statusTrace":"self = <test_community.TestCommunity object at 0x7f8bb6251650>\n\n    @allure.label(\"community\", \"post\", \"comment\", \"authorization\")\n    @allure.description(\"This test checks \\\n    /api/activity_statuses/{`post_id`}/comments/\")\n    def test_send_comment_to_post(self):\n        '''Send comment to post in Community'''\n        text = MainCase.good_phrases()\n        data = {\n            \"text\": text\n        }\n        response = MyRequests.post(\n            f\"/api/activity_statuses/{self.post_id}/comments\",\n            json=data,\n            cookies=self.cookies\n        )\n    \n>       Assertions.assert_code_status(response, 200)\n\ntests/community/test_community.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_status_code):\n    \n>       assert (\n            response.status_code == expected_status_code\n        ), f\"Unexpected status code! Expected: {expected_status_code}. \\\n            Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 200.             Actual: 404\n\nlib/assertions.py:44: AssertionError","steps":[{"name":"POST request to URL '/api/activity_statuses//comments'","time":{"start":1669356535905,"stop":1669356536050,"duration":145},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"community","value":"post"},{"name":"community","value":"authorization"},{"name":"community","value":"comment"},{"name":"epic","value":"[Community] Posts"},{"name":"parentSuite","value":"tests.community"},{"name":"suite","value":"test_community"},{"name":"subSuite","value":"TestCommunity"},{"name":"host","value":"fv-az617-314"},{"name":"thread","value":"2214-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.community.test_community"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":121,"unknown":0,"total":123},"items":[{"uid":"255e45a7b4d5a4fb","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/171//#testresult/255e45a7b4d5a4fb","status":"failed","statusDetails":"AssertionError: Unexpected status code! Expected: 200.             Actual: 404","time":{"start":1669336400838,"stop":1669336401180,"duration":342}},{"uid":"ee2b21b229881ff0","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/170//#testresult/ee2b21b229881ff0","status":"passed","time":{"start":1669320349618,"stop":1669320351173,"duration":1555}},{"uid":"eaf8dc5ef88ea7b7","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/169//#testresult/eaf8dc5ef88ea7b7","status":"passed","time":{"start":1669302362368,"stop":1669302363946,"duration":1578}},{"uid":"75c2d78b85896d51","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/168//#testresult/75c2d78b85896d51","status":"passed","time":{"start":1669270126380,"stop":1669270127643,"duration":1263}},{"uid":"db2c6b83a30d39f2","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/167//#testresult/db2c6b83a30d39f2","status":"passed","time":{"start":1669250203595,"stop":1669250205137,"duration":1542}},{"uid":"5c6d5575085f9f61","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/166//#testresult/5c6d5575085f9f61","status":"passed","time":{"start":1669233987140,"stop":1669233988460,"duration":1320}},{"uid":"5f82ad7ac6a2d90a","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/165//#testresult/5f82ad7ac6a2d90a","status":"passed","time":{"start":1669215936335,"stop":1669215937008,"duration":673}},{"uid":"81fa1e870e297838","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/164//#testresult/81fa1e870e297838","status":"passed","time":{"start":1669183766609,"stop":1669183768000,"duration":1391}},{"uid":"58e760e5daedfe18","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/163//#testresult/58e760e5daedfe18","status":"passed","time":{"start":1669163428601,"stop":1669163430082,"duration":1481}},{"uid":"4c77e98d8cffd83c","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/162//#testresult/4c77e98d8cffd83c","status":"passed","time":{"start":1669147611771,"stop":1669147612773,"duration":1002}},{"uid":"26102a8cf035b35b","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/161//#testresult/26102a8cf035b35b","status":"passed","time":{"start":1669129649960,"stop":1669129651521,"duration":1561}},{"uid":"c5fac71740a5faa8","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/160//#testresult/c5fac71740a5faa8","status":"passed","time":{"start":1669097371802,"stop":1669097372608,"duration":806}},{"uid":"7e1b1b5cfd07d551","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/159//#testresult/7e1b1b5cfd07d551","status":"passed","time":{"start":1669077365994,"stop":1669077367702,"duration":1708}},{"uid":"676c169d29699ea4","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/158//#testresult/676c169d29699ea4","status":"passed","time":{"start":1669061242555,"stop":1669061243991,"duration":1436}},{"uid":"f7b00b274ab5666f","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/157//#testresult/f7b00b274ab5666f","status":"passed","time":{"start":1669043263602,"stop":1669043264799,"duration":1197}},{"uid":"a4b8e47f68e79699","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/156//#testresult/a4b8e47f68e79699","status":"passed","time":{"start":1669010992165,"stop":1669010993512,"duration":1347}},{"uid":"d716463675788d82","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/155//#testresult/d716463675788d82","status":"passed","time":{"start":1668990973447,"stop":1668990974906,"duration":1459}},{"uid":"1a0f84aaee1ecd14","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/154//#testresult/1a0f84aaee1ecd14","status":"passed","time":{"start":1668974747445,"stop":1668974749804,"duration":2359}},{"uid":"40541a4caf67c6ba","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/153//#testresult/40541a4caf67c6ba","status":"passed","time":{"start":1668956732360,"stop":1668956733786,"duration":1426}},{"uid":"8677d1d122f4124a","reportUrl":"https://twill-aol.github.io/tests_twill_therapeutics_backend/152//#testresult/8677d1d122f4124a","status":"passed","time":{"start":1668924493560,"stop":1668924494853,"duration":1293}}]},"tags":[]},"source":"5f6bbd8b10d332e4.json","parameterValues":[]}